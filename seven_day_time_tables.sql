
DROP TABLE IF EXISTS PDW.TIME_WEEK_T;
CREATE TABLE IF NOT EXISTS PDW.TIME_WEEK_T(
	WEEK_ID varchar(6) PRIMARY KEY,
	WEEK_STARTDATE DATE, 
	WEEK_ENDDATE DATE
);

CREATE INDEX week_startenddate_idx ON PDW.TIME_WEEK_T (WEEK_STARTDATE, WEEK_ENDDATE);


INSERT INTO PDW.TIME_WEEK_T
SELECT DISTINCT WEEK_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY WEEK_ID
				ORDER BY PERIOD_ID
				ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) WEEK_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY WEEK_ID
				ORDER BY PERIOD_ID
				ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) WEEK_ENDDATE	
FROM(
	SELECT YEAR_ID, 
		YEAR_ID||MONTH_OF_YEAR MONTH_ID, 
		ISO_YEAR_ID||WEEK WEEK_ID,
		YEAR_ID||QUARTER QUARTER_ID,
		TO_DATE(TO_CHAR(TS, 'MM/DD/YYYY'),'MM/DD/YYYY') PERIOD_ID,
		DAY_OF_MONTH,
		DAY_OF_WEEK, 
		DAY_OF_YEAR
	FROM(
		SELECT TS, 
			TRIM(TO_CHAR(EXTRACT(YEAR FROM TS), '9999')) YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(ISOYEAR FROM TS), '9999')) ISO_YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(MONTH FROM TS), '00')) MONTH_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(DAY FROM TS), '00')) DAY_OF_MONTH,
			TRIM(TO_CHAR(EXTRACT(QUARTER FROM TS),'00')) QUARTER,
			TRIM(TO_CHAR(EXTRACT(ISODOW FROM TS),'0')) DAY_OF_WEEK,
			TRIM(TO_CHAR(EXTRACT(DOY FROM TS),'000')) DAY_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(WEEK FROM TS),'00')) WEEK
		 FROM GENERATE_SERIES('1920-01-01'::TIMESTAMP, '2038-01-01', '1DAY'::INTERVAL) AS T(TS)
	) SUB
) SUB2;



DROP TABLE IF EXISTS PDW.TIME_MONTH_T;
CREATE TABLE IF NOT EXISTS PDW.TIME_MONTH_T(
	MONTH_ID VARCHAR(6) PRIMARY KEY,
	MONTH_STARTDATE DATE,
	MONTH_ENDDATE DATE,
	QUARTER_ID VARCHAR(6) NOT NULL,
	QTR_STARTDATE DATE, 
	QTR_ENDDATE DATE, 
	YEAR_ID VARCHAR(6) NOT NULL, 
	YEAR_STARTDATE DATE, 
	YEAR_ENDDATE DATE
);

CREATE INDEX month_id_idx ON PDW.TIME_MONTH_T (MONTH_STARTDATE, MONTH_ENDDATE);

INSERT INTO PDW.TIME_MONTH_T
SELECT DISTINCT MONTH_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY MONTH_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MONTH_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY MONTH_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MONTH_ENDDATE,
	QUARTER_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY QUARTER_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) QTR_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY QUARTER_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) QTR_ENDDATE,
	YEAR_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY YEAR_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) YEAR_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY YEAR_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) YEAR_ENDDATE
FROM(
	SELECT YEAR_ID, 
		YEAR_ID||MONTH_OF_YEAR MONTH_ID, 
		ISO_YEAR_ID||WEEK WEEK_ID,
		YEAR_ID||QUARTER QUARTER_ID,
		TO_DATE(TO_CHAR(TS, 'MM/DD/YYYY'),'MM/DD/YYYY') PERIOD_ID,
		DAY_OF_MONTH,
		DAY_OF_WEEK, 
		DAY_OF_YEAR
	FROM(
		SELECT TS, 
			TRIM(TO_CHAR(EXTRACT(YEAR FROM TS), '9999')) YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(ISOYEAR FROM TS), '9999')) ISO_YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(MONTH FROM TS), '00')) MONTH_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(DAY FROM TS), '00')) DAY_OF_MONTH,
			TRIM(TO_CHAR(EXTRACT(QUARTER FROM TS),'00')) QUARTER,
			TRIM(TO_CHAR(EXTRACT(ISODOW FROM TS),'0')) DAY_OF_WEEK,
			TRIM(TO_CHAR(EXTRACT(DOY FROM TS),'000')) DAY_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(WEEK FROM TS),'00')) WEEK
		 FROM GENERATE_SERIES('1920-01-01'::TIMESTAMP, '2038-01-01', '1DAY'::INTERVAL) AS T(TS)
	) SUB
) SUB2;

DROP TABLE IF EXISTS PDW.TIME_PERIOD_T;
CREATE TABLE IF NOT EXISTS PDW.TIME_PERIOD_T(
	PERIOD_ID DATE PRIMARY KEY,
	DOW_ID VARCHAR(1),
	DOW_DESC VARCHAR(8),
	WEEK_ID varchar(6),
	WEEK_STARTDATE DATE, 
	WEEK_ENDDATE DATE,
	MONTH_ID VARCHAR(6),
	MONTH_STARTDATE DATE,
	MONTH_ENDDATE DATE,
	QUARTER_ID VARCHAR(6) NOT NULL,
	QTR_STARTDATE DATE, 
	QTR_ENDDATE DATE, 
	YEAR_ID VARCHAR(6) NOT NULL, 
	YEAR_STARTDATE DATE, 
	YEAR_ENDDATE DATE
);

CREATE INDEX period_id_idx ON PDW.TIME_PERIOD_T (PERIOD_ID);
CREATE INDEX week_id_idx ON PDW.TIME_PERIOD_T (WEEK_ID);

INSERT INTO PDW.TIME_PERIOD_T
SELECT PERIOD_ID,
	DAY_OF_WEEK DOW_ID,
	CASE 
		WHEN DAY_OF_WEEK in('6', '7') 
		THEN 'WEEKEND'
		WHEN DAY_OF_WEEK in('1', '2', '3', '4', '5')
		THEN 'WEEKDAY'
		ELSE 'NA'
	END DOW_DESC,
	WEEK_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY WEEK_ID
				ORDER BY PERIOD_ID
				ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) WEEK_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY WEEK_ID
				ORDER BY PERIOD_ID
				ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) WEEK_ENDDATE,
	MONTH_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY MONTH_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MONTH_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY MONTH_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) MONTH_ENDDATE,
	QUARTER_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY QUARTER_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) QTR_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY QUARTER_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) QTR_ENDDATE,
	YEAR_ID,
	FIRST_VALUE(PERIOD_ID) OVER(PARTITION BY YEAR_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) YEAR_STARTDATE,
	LAST_VALUE(PERIOD_ID) OVER(PARTITION BY YEAR_ID
				 ORDER BY PERIOD_ID
				 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) YEAR_ENDDATE		
FROM(
	SELECT YEAR_ID YEAR_ID, 
		YEAR_ID||MONTH_OF_YEAR MONTH_ID, 
		ISO_YEAR_ID||WEEK WEEK_ID,
		YEAR_ID||QUARTER QUARTER_ID,
		TO_DATE(TO_CHAR(TS, 'MM/DD/YYYY'),'MM/DD/YYYY') PERIOD_ID,
		DAY_OF_MONTH,
		DAY_OF_WEEK, 
		DAY_OF_YEAR
	FROM(
		SELECT TS, 
			TRIM(TO_CHAR(EXTRACT(YEAR FROM TS), '9999')) YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(ISOYEAR FROM TS), '9999')) ISO_YEAR_ID,
			TRIM(TO_CHAR(EXTRACT(MONTH FROM TS), '00')) MONTH_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(DAY FROM TS), '00')) DAY_OF_MONTH,
			TRIM(TO_CHAR(EXTRACT(QUARTER FROM TS),'00')) QUARTER,
			TRIM(TO_CHAR(EXTRACT(ISODOW FROM TS),'0')) DAY_OF_WEEK,
			TRIM(TO_CHAR(EXTRACT(DOY FROM TS),'000')) DAY_OF_YEAR,
			TRIM(TO_CHAR(EXTRACT(WEEK FROM TS),'00')) WEEK
		 FROM GENERATE_SERIES('1920-01-01'::TIMESTAMP, '2029-12-31', '1DAY'::INTERVAL) AS T(TS)
	) SUB
) SUB2;